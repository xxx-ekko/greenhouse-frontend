name: Deploy Frontend to Server

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: 1. Checkout Repository
        uses: actions/checkout@v4

      - name: 2. Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PAT }}

      - name: 3. Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true

          tags: ghcr.io/${{ secrets.DOCKER_USERNAME }}/greenhouse-frontend:latest

      - name: 4. Deploy to Server via Cloudflare Tunnel
        run: |
          echo "--- Installing cloudflared ---"
          wget -q https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64.deb
          sudo dpkg -i cloudflared-linux-amd64.deb

          echo "--- Setting up SSH ---"
          mkdir -p ~/.ssh
          echo "${{ secrets.SERVER_SSH_PRIVATE_KEY }}" > ~/.ssh/deploy_key
          chmod 600 ~/.ssh/deploy_key

          cat <<EOT >> ~/.ssh/config
          Host ${{ secrets.SERVER_HOST }}
            User ${{ secrets.SERVER_USER }}
            ProxyCommand /usr/local/bin/cloudflared access ssh --hostname %h
            IdentityFile ~/.ssh/deploy_key
          EOT

          echo "--- Deploying to server ---"
          ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_HOST }} << 'EOF'
            echo "âœ… Connexion au serveur rÃ©ussie, dÃ©but du dÃ©ploiement..."
            # On se place dans le dossier du CHEF D'ORCHESTRE
            cd ~/greenhouse-backend 
            docker login ghcr.io -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PAT }}

            # --- On tire et relance le BON service ---
            docker compose pull frontend 
            docker compose up -d --force-recreate frontend

            echo "ðŸš€ DÃ©ploiement du Frontend terminÃ© avec succÃ¨s !"
          EOF
